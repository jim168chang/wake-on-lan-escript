#!/usr/bin/env escript

main(A) ->
    MacAddress = case length(A) of
        1 ->    %wol XXXXXXXXXXXX
            [MA] = A,
            try
                %Validate if MA is a hex number list and length is 12
                12 = length(MA),
                list_to_integer(MA, 16)
            catch
                _:_ ->
                    usage()
            end,
            
            %Validation is done, no exception will happen
            [H0, L0, H1, L1, H2, L2, H3, L3, H4, L4, H5, L5] = MA,
            I0 = list_to_integer([H0, L0], 16),
            I1 = list_to_integer([H1, L1], 16),
            I2 = list_to_integer([H2, L2], 16),
            I3 = list_to_integer([H3, L3], 16),
            I4 = list_to_integer([H4, L4], 16),
            I5 = list_to_integer([H5, L5], 16),
            <<I0, I1, I2, I3, I4, I5>>;
        6 ->    %wol XX XX XX XX XX XX
            try
                [A0, A1, A2, A3, A4, A5] = A,
                M0 = list_to_integer(A0, 16),   %Validate if A0 is a hex string
                M1 = list_to_integer(A1, 16),   %Validate if A1 is a hex string
                M2 = list_to_integer(A2, 16),   %Validate if A2 is a hex string
                M3 = list_to_integer(A3, 16),   %Validate if A3 is a hex string
                M4 = list_to_integer(A4, 16),   %Validate if A4 is a hex string
                M5 = list_to_integer(A5, 16),   %Validate if A5 is a hex string
                list_to_binary([M0, M1, M2, M3, M4, M5])
            catch
                _:_ ->
                    usage()
            end;
        _ ->    %MAC address is invalid
            usage()
    end,

    %Constructing magic packet
    Six255s = [255, 255, 255, 255, 255, 255],
    MA4 = [MacAddress, MacAddress, MacAddress, MacAddress], %Tmp variable
    MagicPacket = list_to_binary([Six255s, MA4, MA4, MA4, MA4]),
    
    %Sending magic packet
    io:format("Before sending WOL magic packet...~n"),
    {ok, S} = gen_udp:open(0, [{broadcast, true}]),
    gen_udp:send(S, {255, 255, 255, 255}, 9, MagicPacket),
    io:format("WOL magic packet has been sent for MAC address ~p!~n", [A]).

usage() ->
    io:format("usage: wol XX XX XX XX XX XX~n"),
    io:format("   or: wol XXXXXXXXXXXX~n"),
    io:format(" note: Six MAC address hexadecimal numbers~n"),
    halt(1).
